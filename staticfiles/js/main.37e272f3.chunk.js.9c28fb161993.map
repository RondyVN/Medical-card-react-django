{"version":3,"sources":["components/UI/MyModal/MyModal.module.css","components/UI/button/MyButton.module.css","components/UI/myinput/Input.module.css","components/UI/MySelect/MySelect.module.css","components/UI/MyTextArea/MyTextArea.module.css","components/LeftPanel/PatientItem.jsx","components/LeftPanel/PatientList.jsx","components/UI/button/MyButton.jsx","components/UI/myinput/Input.jsx","components/LeftPanel/Search.jsx","components/UI/MyModal/MyModal.jsx","components/UI/MySelect/MySelect.jsx","components/Form.jsx","API/PostService.js","components/utils/CreatePatient.js","components/LeftPanel/CreateForm.jsx","components/Panel.jsx","components/LeftPanel/LeftPanle.jsx","components/RightPanel/RightPanel.jsx","components/RightPanel/Header.jsx","components/RightPanel/PatientFormEdit.jsx","components/utils/AddComment.js","components/UI/MyTextArea/MyTextArea.jsx","components/RightPanel/comments/SendComment.jsx","components/RightPanel/OutPatient.jsx","components/RightPanel/comments/CommentItem.jsx","components/RightPanel/comments/CommentsPanel.jsx","components/RightPanel/MainBlock.jsx","components/RightPanel/InfoOldName.jsx","components/RightPanel/PatientInfo.jsx","App.js","hooks/useSearch.js","hooks/useFetch.js","index.js"],"names":["module","exports","PatientItem","props","className","id","patients","onClick","setId","first_name","last_name","sex","date_birth","PatientList","length","map","e","style","textAlign","MyButton","children","classes","MyBtn","Input","React","forwardRef","ref","cl","MyInput","Search","filter","setFilter","value","query","onChange","target","placeholder","MyModal","visible","setVisible","rootClasses","myModal","push","active","join","myModalContent","stopPropagation","MySelect","option","defaultValue","event","disabled","name","Form","post","setPost","useState","type","setType","max","Date","toJSON","slice","onFocus","onBlur","country","state","address","PostService","axios","get","response_patient","responseFirstId","idPatient","delete","responsePatientDetail","response–°omments","put","postPat","comment","postComment","getOld","dateBirth","utc","old","CreatePatient","create","a","i","ValuePost","Object","values","count","console","log","data","CreateForm","enableCreate","setEnableCreate","addNewPost","preventDefault","Panel","LeftPanle","RightPanel","Header","PatientFormEdit","setEdit","updRightPanel","deletePatient","savePatient","UpdatePatient","getPatient","postList","handler","AddComment","setComment","CreateComment","MyTextArea","SendComment","addComment","OutPatient","info","CommentItem","com","username","date_create","CommentsPanel","comments","MainBlock","InfoOldName","PatientInfo","edit","setComments","setOld","setInfo","getInfoPatient","useCallback","DetailPatient","response","CommentPatient","response_comments","comment_id","createComment","useEffect","App","setPatients","modal","setModal","getSearch","patientList","inputText","toLowerCase","replace","useMemo","arr","split","patient","includes","usePatient","setIdPatient","enableDel","setEnableDel","callback","isLoading","setIsLoading","error","setError","fetching","message","useFetch","getFirstPatient","fetchPosts","isPostsLoading","postError","createPatient","newPost","DeletePatient","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37e272f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__2QHNV\",\"myModalContent\":\"MyModal_myModalContent__31Xa3\",\"active\":\"MyModal_active__1pd6O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyBtn\":\"MyButton_MyBtn__f-ab1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyInput\":\"Input_MyInput__3_hra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MySelect\":\"MySelect_MySelect__2UyJg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyTextArea\":\"MyTextArea_MyTextArea__28pN2\"};","import React from 'react';\r\n\r\nconst PatientItem = (props) => {\r\n\r\n    const getId = () => {\r\n        props.setId(props.patients.id)\r\n    }\r\n    return (\r\n        <div className={props.id === props.patients.id ? \"patient choose-patient\" : \"patient\" } onClick={getId}>\r\n            <div className=\"first-last-name\">\r\n                {props.patients.first_name} {props.patients.last_name}\r\n            </div>\r\n            <div className=\"date-patient\">\r\n                <p>{props.patients.sex}</p>\r\n                {props.patients.date_birth}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientItem;","import React from 'react';\r\nimport PatientItem from \"./PatientItem\";\r\n\r\n\r\nconst PatientList = ({setId, patients, id}) => {\r\n    if (!patients.length) {\r\n        return (\r\n            <div>\r\n                <h1 style={{textAlign: 'center'}}>\r\n                    Posts not found!\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {patients.map(e =>\r\n                <PatientItem setId={setId} key={e.id} id={id} patients={e}/>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientList;","import React from 'react';\r\nimport classes from './MyButton.module.css';\r\n\r\nconst MyButton = ({children, ...props}) => {\r\n    return (\r\n        <button {...props} className={classes.MyBtn}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MyButton;","import React from 'react';\r\nimport cl from './Input.module.css'\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n    return (\r\n        <input ref={ref} className={cl.MyInput} {...props}/>\r\n    );\r\n});\r\n\r\nexport default Input;","import React from 'react';\r\nimport Input from \"../UI/myinput/Input\";\r\n\r\nconst Search = ({filter, setFilter}) => {\r\n    return (\r\n        <Input\r\n            value={filter.query}\r\n            onChange={e => setFilter({...filter, query: e.target.value})}\r\n            placeholder='Search'\r\n        />\r\n    );\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport cl from './MyModal.module.css'\r\n\r\nconst MyModal = ({children, visible, setVisible}) => {\r\n\r\n    const rootClasses = [cl.myModal]\r\n\r\n    if (visible) {\r\n        rootClasses.push(cl.active)\r\n    }\r\n\r\n    return (\r\n        <div className={rootClasses.join(' ')} onClick={() => setVisible(false)}>\r\n            <div className={cl.myModalContent} onClick={(e) => e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyModal;","import React from 'react';\r\nimport classes from './MySelect.module.css'\r\n\r\nconst MySelect = ({option, defaultValue, value, onChange}) => {\r\n    return (\r\n        <select\r\n            className={classes.MySelect}\r\n            value={value}\r\n            onChange={event => onChange(event.target.value)}\r\n        >\r\n            <option disabled value=\"\">{defaultValue}</option>\r\n            {option.map(option =>\r\n                <option key={option.value} value={option.value}>\r\n                    {option.name}\r\n                </option>\r\n            )}\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default MySelect;","import Input from \"./UI/myinput/Input\";\r\nimport MySelect from \"./UI/MySelect/MySelect\";\r\nimport {useState} from \"react\";\r\n\r\nconst Form = ({post, setPost, children}) => {\r\n    const [type, setType] = useState('text')\r\n    return (\r\n        <form>\r\n            <Input\r\n                value={post.first_name}\r\n                onChange={e => setPost({...post, first_name: e.target.value})}\r\n                type=\"text\"\r\n                placeholder=\"First Name\"\r\n            />\r\n            <Input\r\n                value={post.last_name}\r\n                onChange={e => setPost({...post, last_name: e.target.value})}\r\n                type=\"text\"\r\n                placeholder=\"Last Name\"/>\r\n            <Input\r\n                value={post.date_birth}\r\n                onChange={e => setPost({...post, date_birth: e.target.value})}\r\n                type={type}\r\n                max={new Date().toJSON().slice(0, 10)}\r\n                onFocus={() => setType('date')}\r\n                onBlur={() => setType('text')}\r\n                placeholder=\"Date birth\"/>\r\n            <MySelect\r\n                defaultValue={'Select gender'}\r\n                value={post.sex}\r\n                onChange={e => setPost({...post, sex: e})}\r\n                option={[\r\n                    {value: 'Male', name: 'Male'},\r\n                    {value: 'Female', name: 'Female'},\r\n                ]}\r\n            />\r\n            <Input\r\n                value={post.country}\r\n                onChange={e => setPost({...post, country: e.target.value})}\r\n                type=\"text\"\r\n                placeholder=\"Country\"/>\r\n            <Input\r\n                value={post.state}\r\n                onChange={e => setPost({...post, state: e.target.value})}\r\n                type=\"text\"\r\n                placeholder=\"State\"/>\r\n            <Input\r\n                value={post.address}\r\n                onChange={e => setPost({...post, address: e.target.value})}\r\n                type=\"text\"\r\n                placeholder=\"Address\"/>\r\n            {children}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import axios from \"axios\";\r\n\r\nexport default class PostService {\r\n\r\n    static async getPatient() {\r\n        const response_patient = await axios.get('/api-patients/patient-list/')\r\n        return response_patient\r\n    }\r\n\r\n    static async getFirstPatient() {\r\n        const responseFirstId = await axios.get('/api-patients/patient-first/')\r\n        return responseFirstId\r\n    }\r\n\r\n    static async DeletePatient(idPatient) {\r\n        await axios.delete(`/api-patients/patient-delete/${idPatient}/`)\r\n    }\r\n\r\n    static async DetailPatient(idPatient) {\r\n        const responsePatientDetail = await axios.get(`/api-patients/patient-detail/${idPatient}/`)\r\n        return responsePatientDetail\r\n    }\r\n\r\n    static async CommentPatient(idPatient) {\r\n        const response–°omments = await axios.get(`/api-patients/comments-detail/${idPatient}/`)\r\n        return response–°omments\r\n    }\r\n\r\n    static async UpdatePatient(post) {\r\n        await axios.put(`/api-patients/patient-update/${post.id}/`, post)\r\n    }\r\n\r\n    static async CreatePatient(post) {\r\n        const postPat = await axios.post('/api-patients/patient-create/', post)\r\n        return postPat\r\n    }\r\n\r\n    static async CreateComment(comment) {\r\n        const postComment = await axios.post('/api-patients/comment-create/', comment)\r\n        return postComment\r\n    }\r\n}","import PostService from \"../../API/PostService\";\r\n\r\nexport const getOld = (dateBirth) => {\r\n    let utc = new Date().toJSON().slice(0, 10);\r\n    let old = +utc.slice(0, 4) - dateBirth.slice(0, 4)\r\n    if (+utc.slice(5, 7) < dateBirth.slice(5, 7))\r\n    {\r\n        old -= 1\r\n    }\r\n    return old\r\n}\r\n\r\nexport const CreatePatient = async (post, setPost, create) => {\r\n\r\n    const ValuePost = Object.values(post)\r\n    let count = 0\r\n    for (let i in ValuePost) {\r\n        if (ValuePost[i] === '') {\r\n            count += 1\r\n        }\r\n    }\r\n    console.log(count)\r\n    if (count === 0) {\r\n        const postPat = await PostService.CreatePatient(post)\r\n        create(postPat.data)\r\n        setPost({first_name: '', last_name: '', date_birth: '', sex: '', state: '', country: '', address: ''})\r\n    }\r\n}","import React from 'react';\r\nimport {useState} from \"react\";\r\nimport MyButton from \"../UI/button/MyButton\";\r\nimport Form from \"../Form\";\r\nimport {CreatePatient} from \"../utils/CreatePatient\";\r\n\r\nconst CreateForm = ({create}) => {\r\n    const [post, setPost] = useState({first_name: '', last_name: '', date_birth: '', sex: '', state: '', country: '', address: ''});\r\n    const [enableCreate, setEnableCreate] = useState(false)\r\n\r\n    const addNewPost = async (e) => {\r\n        e.preventDefault()\r\n        CreatePatient(post, setPost, create)\r\n        //setPost({first_name: '', last_name: '', date_birth: '', sex: '', state: '', country: '', address: ''})\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Form post={post} setPost={setPost} setEnableCreate={setEnableCreate}>\r\n                <div className=\"position-btn-to-createForm\">\r\n                    <MyButton disabled={enableCreate} onClick={addNewPost}>Add patient</MyButton>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateForm;","import React from 'react';\r\n\r\nconst Panel = ({children}) => {\r\n    return (\r\n        <div className=\"panels\">\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Panel;","import React from 'react';\r\n\r\nconst LeftPanle = ({children}) => {\r\n    return (\r\n        <div className=\"left-panel\">\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LeftPanle;","import React from 'react';\r\n\r\nconst RightPanel = ({children}) => {\r\n    return (\r\n        <div className=\"right-panel\">\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RightPanel;","import React from 'react';\r\n\r\n\r\nconst Header = ({children}) => {\r\n    return (\r\n        <header className=\"header-right-panel\">\r\n            <div className=\"placing-btn\">\r\n\r\n                {children}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import MyButton from \"../UI/button/MyButton\";\r\nimport Header from \"./Header\";\r\nimport Form from \"../Form\";\r\nimport PostService from \"../../API/PostService\";\r\n\r\nconst PatientFormEdit = ({post, setPost, setEdit, updRightPanel, deletePatient}) => {\r\n\r\n    const savePatient = async (e) => {\r\n        e.preventDefault()\r\n        await PostService.UpdatePatient(post)\r\n        const postList = await PostService.getPatient()\r\n        updRightPanel(postList.data)\r\n        setEdit(false)\r\n        setPost({first_name: '', last_name: '', date_birth: '', sex: '', state: '', country: ''})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header>\r\n                <span><MyButton onClick={savePatient}>Save</MyButton></span>\r\n                <span><MyButton onClick={() => setEdit(false)}>Cancel</MyButton></span>\r\n                <span><MyButton onClick={deletePatient}>Delete</MyButton></span>\r\n            </Header>\r\n            <Form post={post} setPost={setPost} handler={savePatient}></Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientFormEdit;","import PostService from \"../../API/PostService\";\r\n\r\nexport const AddComment = async (comment, setComment, create) => {\r\n    const postComment = await PostService.CreateComment(comment)\r\n\r\n    create(postComment.data)\r\n    setComment({...comment, \"comment\": \"\"})\r\n}","import React from 'react';\r\nimport classes from './MyTextArea.module.css'\r\n\r\nconst MyTextArea = React.forwardRef((props, ref) => {\r\n    return (\r\n        <textarea ref={ref} className={classes.MyTextArea} {...props}/>\r\n    );\r\n});\r\n\r\nexport default MyTextArea;","import MyButton from \"../../UI/button/MyButton\";\r\nimport {AddComment} from \"../../utils/AddComment\";\r\nimport MyTextArea from \"../../UI/MyTextArea/MyTextArea\";\r\n\r\nconst SendComment = ({create, comment, setComment}) => {\r\n\r\n    const addComment = async (e) => {\r\n        e.preventDefault()\r\n        AddComment(comment, setComment, create)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"send-comment\">\r\n            <div className=\"input-sendMessage\">\r\n                <MyTextArea type=\"textarea\" value={comment.comment}\r\n                       onChange={e => setComment({...comment, \"comment\": e.target.value})}/>\r\n            </div>\r\n            {comment.comment\r\n                ? <MyButton disabled={false} onClick={addComment}>Send comment</MyButton>\r\n                : <MyButton disabled={true} onClick={addComment}>Send comment</MyButton>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SendComment;","import React from 'react';\r\n\r\nconst OutPatient = ({info}) => {\r\n    return (\r\n        <div className=\"out-patient\">\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>First Name:</td>\r\n                        <td>{info.first_name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Last Name:</td>\r\n                        <td>{info.last_name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Country:</td>\r\n                        <td>{info.country}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>State:</td>\r\n                        <td>{info.state}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Address</td>\r\n                        <td>{info.address}</td>\r\n                    </tr>\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OutPatient;","import React from 'react';\r\n\r\nconst CommentItem = (props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"first-last-name\">\r\n                {props.com.username} {props.com.comment}\r\n            </div>\r\n            <div className=\"date-patient\">\r\n                {props.com.date_create}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentItem;","import React from 'react';\r\nimport CommentItem from \"./CommentItem\";\r\n\r\nconst CommentsPanel = ({comments}) => {\r\n    if (!comments.length) {\r\n        return (\r\n            <div className=\"comment-panel\">\r\n                <h1 style={{textAlign: 'center'}}>\r\n                    There are no comments yet\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"comment-panel\">\r\n            {comments.map(e =>\r\n                <div className=\"comment\" key={e.id}><CommentItem com={e}/></div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentsPanel;","import React from 'react';\r\nimport OutPatient from \"./OutPatient\";\r\nimport CommentsPanel from \"./comments/CommentsPanel\";\r\n\r\nconst MainBlock = ({info, comments}) => {\r\n    return (\r\n        <div className=\"main-block\">\r\n            <OutPatient info={info}/>\r\n            <CommentsPanel comments={comments}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainBlock;","import React from 'react';\r\n\r\nconst InfoOldName = ({info, old}) => {\r\n\r\n\r\n    return (\r\n        <span className=\"position-header-info\">\r\n            <span className=\"\">{info.first_name} {info.last_name}</span>\r\n            <span>Years old {old}</span>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default InfoOldName;","import React, {useEffect, useState, useCallback} from 'react';\r\nimport Header from \"./Header\";\r\nimport MyButton from \"../UI/button/MyButton\";\r\nimport PatientFormEdit from \"./PatientFormEdit\";\r\nimport SendComment from \"./comments/SendComment\";\r\nimport MainBlock from \"./MainBlock\";\r\nimport PostService from \"../../API/PostService\";\r\nimport {getOld} from \"../utils/CreatePatient\";\r\nimport InfoOldName from \"./InfoOldName\";\r\n\r\nconst PatientInfo = ({id, edit, setEdit, deletePatient, updRightPanel}) => {\r\n\r\n    const [comments, setComments] = useState([])\r\n    const [comment, setComment] = useState({\"comment\": \"\", \"comment_id\": \"\"})\r\n    const [old, setOld] = useState(0)\r\n\r\n    const [info, setInfo] = useState('')\r\n    const getInfoPatient = useCallback(async () => {\r\n        const response = await PostService.DetailPatient(id)\r\n        const response_comments = await PostService.CommentPatient(id)\r\n        const old = getOld(response.data.date_birth)\r\n        setOld(old)\r\n        setInfo(response.data)\r\n        setComments(response_comments.data)\r\n        setComment({comment: '', comment_id: id})\r\n    }, [id])\r\n\r\n\r\n    const createComment = async (comment) => {\r\n        setComments([comment, ...comments])\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfoPatient()\r\n    }, [edit, getInfoPatient])\r\n\r\n    if (edit) {\r\n        return (\r\n            <div>\r\n                <PatientFormEdit post={info} setPost={setInfo} setEdit={setEdit} updRightPanel={updRightPanel}\r\n                                 deletePatient={deletePatient}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header>\r\n                <InfoOldName info={info} old={old}/>\r\n                <span><MyButton onClick={() => setEdit(true)}>Edit</MyButton></span>\r\n                <span><MyButton onClick={deletePatient}>Delete</MyButton></span>\r\n            </Header>\r\n            <MainBlock info={info} comments={comments} create={createComment} comment={comment} setComment={setComment}/>\r\n            <SendComment create={createComment} comment={comment} setComment={setComment}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientInfo;","import './styles/App.css'\nimport {useEffect, useState} from \"react\";\nimport PatientList from \"./components/LeftPanel/PatientList\";\nimport MyButton from \"./components/UI/button/MyButton\";\nimport {usePatient} from \"./hooks/useSearch\"\nimport {useFetch} from \"./hooks/useFetch\"\nimport Search from \"./components/LeftPanel/Search\";\nimport MyModal from \"./components/UI/MyModal/MyModal\";\nimport CreateForm from \"./components/LeftPanel/CreateForm\";\nimport Panel from \"./components/Panel\";\nimport LeftPanle from \"./components/LeftPanel/LeftPanle\";\nimport RightPanel from \"./components/RightPanel/RightPanel\";\nimport PatientInfo from \"./components/RightPanel/PatientInfo\";\nimport PostService from \"./API/PostService\";\n\nfunction App() {\n    const [edit, setEdit] = useState(false)\n    const [patients, setPatients] = useState([])\n    const [filter, setFilter] = useState({query: ''})\n    const [modal, setModal] = useState(false)\n    const getSearch = usePatient(patients, filter.query)\n    const [idPatient, setIdPatient] = useState('')\n    const [enableDel, setEnableDel] = useState(false)\n    const [fetchPosts, isPostsLoading, postError] = useFetch(async () => {\n        const response = await PostService.getPatient()\n        setPatients(response.data)\n        const responseFirstId = await PostService.getFirstPatient()\n        setIdPatient(responseFirstId.data.id)\n        setEnableDel(false)\n    })\n\n    useEffect(() => {\n        fetchPosts()\n    }, [enableDel])\n\n    const createPatient = async (newPost) => {\n        setPatients([newPost, ...patients])\n        setIdPatient(newPost.id)\n        setModal(false)\n    }\n\n    const updPatient = (patient) => {\n        setPatients([...patient])\n    }\n\n    const setId = (id) => {\n        setIdPatient(id)\n    }\n\n    const deletePatient = async () => {\n        await PostService.DeletePatient(idPatient)\n        setEnableDel(true)\n    }\n\n    return (\n        <div className=\"App\">\n            {postError}\n            <Panel>\n                <LeftPanle>\n                    <Search filter={filter} setFilter={setFilter}/>\n                    <div className=\"position-btn\">\n                        <MyButton onClick={() => setModal(true)}>\n                            Create user\n                        </MyButton>\n                    </div>\n                    <MyModal visible={modal} setVisible={setModal}>\n                        <CreateForm create={createPatient}/>\n                    </MyModal>\n                    {isPostsLoading\n                        ? <div>Loading...</div>\n                        : <PatientList setId={setId} patients={getSearch} id={idPatient}/>\n                    }\n                </LeftPanle>\n\n                <RightPanel>\n                    {!idPatient\n                        ? <div>Loading...</div>\n                        : <PatientInfo edit={edit} id={idPatient} setEdit={setEdit} deletePatient={deletePatient} updRightPanel={updPatient}/>\n                    }\n                </RightPanel>\n            </Panel>\n        </div>\n    );\n}\n\nexport default App;\n\n\n","import {useMemo} from \"react\";\r\n\r\nexport const usePatient = (patients, query) => {\r\n    const patientList = patients\r\n    const inputText = query.toLowerCase().replace( /\\s/g, \"\")\r\n    const SearchedPatient = useMemo(() => {\r\n        const arr = query.toLowerCase().split(' ', 2)\r\n        return patientList.filter(patient => (patient.first_name.toLowerCase().includes(arr[0])\r\n            && patient.last_name.toLowerCase().includes(arr[1])) || (patient.first_name.toLowerCase().includes(inputText)\r\n            || patient.last_name.toLowerCase().includes(inputText)) || (patient.first_name.toLowerCase().includes(arr[1])\r\n            && patient.last_name.toLowerCase().includes(arr[0]))\r\n        )\r\n    }, [query, patientList])\r\n\r\n    return SearchedPatient\r\n\r\n}","import {useState} from \"react\";\r\n\r\nexport const useFetch = (callback) => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n\r\n    const fetching = async () => {\r\n        try {\r\n            setIsLoading(true)\r\n            await callback()\r\n        } catch (e) {\r\n            setError(e.message)\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return [fetching, isLoading, error]\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}