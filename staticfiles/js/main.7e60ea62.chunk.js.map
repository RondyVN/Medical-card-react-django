{"version":3,"sources":["components/Headers/LeftHeader.jsx","components/Layout/PatientList.jsx","components/LeftPanel/LeftPanel.jsx","components/RightPanel/RightPanel.jsx","context/index.js","API/PatientGet.js","components/Layout/Layout.jsx","hooks/useSearch.js","hooks/useFetch.js","components/Form/PatientForm.jsx","components/Headers/AgeAndName.jsx","components/Headers/RightHeader.jsx","API/PatientPost.js","pages/PatientCreateForm.jsx","components/RightPanel/ConfirmDeleteModal.jsx","pages/PatientEditForm.jsx","API/CommentPost.js","components/RightPanel/Comments/SendComment.jsx","components/RightPanel/Comments/CommentsPanel.jsx","components/RightPanel/PatientCard.jsx","components/RightPanel/MainBlock.jsx","API/CommentGet.js","pages/PatientInfo.jsx","App.js","context/PatientsContext.jsx","index.js"],"names":["LeftHeader","filter","setFilter","history","useHistory","AppBar","position","sx","background","Toolbar","TextField","label","type","variant","value","query","onChange","e","target","Button","ml","onClick","push","PatientList","patients","map","patient","List","component","m","ListItemButton","borderRadius","boxShadow","id","ListItemText","primary","Fragment","first_name","last_name","secondary","date_birth","sex","fontSize","LeftPanel","children","className","RightPanel","Patients","createContext","PatientGet","axios","get","Layout","useContext","setPatients","useState","getSearch","patientList","inputText","toLowerCase","replace","arr","split","includes","usePatient","callback","error","setError","getPatients","a","message","useFetch","getAll","data","useEffect","PatientForm","setPatient","marginInput","margin","Grid","Paper","elevation","style","padding","width","fullWidth","placeholder","FormControl","marginTop","FormLabel","RadioGroup","name","display","FormControlLabel","control","Radio","InputLabelProps","shrink","country","state","address","AgeAndName","patientInfo","Typography","flexGrow","fromNow","ago","RightHeader","darkTheme","createTheme","palette","mode","Box","theme","PatientPost","delete","put","post","PatientCreateForm","addNewPatient","create","patientCreated","disabled","color","ConfirmDeleteModal","open","setOpen","deletePatient","closeModal","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","PatientEditForm","params","useParams","detail","savePatient","update","CommentPost","comment","SendComment","setComment","addComment","preventDefault","postComment","p","InputProps","endAdornment","endIcon","CommentsPanel","comments","length","container","wrap","spacing","justifyContent","item","xs","zeroMinWidth","textAlign","date_create","Divider","PatientCard","paperStyle","MainBlock","height","md","overflowY","wordWrap","maxWidth","bottom","CommentGet","PatientInfo","setComments","createComment","App","exact","path","to","PatientsContext","Provider","Main","setId","getId","response","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e60ea62.chunk.js","sourcesContent":["import React from 'react';\r\nimport {AppBar, Toolbar, Button, TextField} from \"@mui/material\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nconst LeftHeader = ({filter, setFilter}) => {\r\n\r\n    const history = useHistory()\r\n    return (\r\n        <AppBar\r\n            position=\"sticky\"\r\n            sx={{background: 'white'}}\r\n        >\r\n            <Toolbar>\r\n                <TextField\r\n                    label=\"Search\"\r\n                    type=\"search\"\r\n                    variant=\"standard\"\r\n                    value={filter.query}\r\n                    onChange={e => setFilter({...filter, query: e.target.value})}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    sx={{ml: 3}}\r\n                    onClick={() => history.push('/patient/create')}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default LeftHeader;","import React from 'react';\r\nimport {List, ListItemButton, ListItemText} from \"@mui/material\";\r\nimport WomanIcon from \"@mui/icons-material/Woman\";\r\nimport ManIcon from \"@mui/icons-material/Man\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nconst PatientList = ({patients}) => {\r\n    const history = useHistory()\r\n    return (\r\n        <nav data-testid=\"navbar\">\r\n            {patients?.map((patient) =>\r\n                <List data-testid=\"link-patient\" component=\"div\" aria-label=\"secondary mailbox folder\" key={patient.id} sx={{m: \"0 5px 0 5px\"}}>\r\n                    <ListItemButton sx={{borderRadius: 2, boxShadow: 3}}\r\n                        onClick={() => history.push(`/patient/${patient.id}`)}\r\n                    >\r\n                        <ListItemText primary={<React.Fragment>{patient.first_name} {patient.last_name}</React.Fragment>}\r\n                                      secondary={\r\n                                          <React.Fragment>\r\n                                              {patient.date_birth}\r\n                                          </React.Fragment>\r\n                                      }\r\n                        />\r\n                        {patient.sex === 'Female'\r\n                            ? <WomanIcon sx={{ fontSize: 30 }}/>\r\n                            : <ManIcon sx={{ fontSize: 30 }}/>\r\n                        }\r\n                    </ListItemButton>\r\n                </List>\r\n            )}\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default PatientList;","import React from 'react';\r\n\r\nconst LeftPanel = ({children}) => {\r\n    return (\r\n        <div className=\"left-panel\">\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LeftPanel;","import React from 'react';\r\n\r\nconst RightPanel = ({children}) => {\r\n    return (\r\n        <div className=\"right-panel\">\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RightPanel;","import {createContext} from \"react\";\r\n\r\n\r\nexport const Patients = createContext([])\r\n","import axios from \"axios\";\r\n\r\nexport default class PatientGet {\r\n    static async getAll() {\r\n        return await axios.get('/api-patients/patient-list/')\r\n    }\r\n\r\n    static async detail(id) {\r\n        return await axios.get(`/api-patients/patient-detail/${id}/`)\r\n    }\r\n\r\n}","import React, {useContext, useEffect, useState} from 'react';\r\nimport Search from \"../Headers/LeftHeader\";\r\nimport PatientList from \"./PatientList\";\r\nimport LeftPanel from \"../LeftPanel/LeftPanel\";\r\nimport {usePatient} from \"../../hooks/useSearch\";\r\nimport RightPanel from \"../RightPanel/RightPanel\";\r\nimport {Patients} from \"../../context\";\r\nimport PatientGet from \"../../API/PatientGet\";\r\nimport {useFetch} from \"../../hooks/useFetch\";\r\n\r\nconst Layout = ({children}) => {\r\n    //const history = useHistory()\r\n    const {patients, setPatients} = useContext(Patients)\r\n    const [filter, setFilter] = useState({query: ''})\r\n    const getSearch = usePatient(patients, filter.query)\r\n    //console.log(patients)\r\n    const [getPatients, error] = useFetch(async () => {\r\n        const patients = await PatientGet.getAll()\r\n        //setFirstId(patients.data[0].id)\r\n        setPatients(patients.data)\r\n    })\r\n    //console.log(patients)\r\n    useEffect(() => {\r\n        getPatients()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"panels\">\r\n            <LeftPanel>\r\n                <Search filter={filter} setFilter={setFilter}/>\r\n                <PatientList patients={getSearch} /*firstId={firstId}*//>\r\n            </LeftPanel>\r\n            <RightPanel>\r\n                {children}\r\n            </RightPanel>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;","\r\nexport const usePatient = (patients, query) => {\r\n    const patientList = patients\r\n    const inputText = query.toLowerCase().replace(/\\s/g, \"\")\r\n    const arr = query.toLowerCase().split(' ', 2)\r\n    return patientList?.filter((patient) => (patient.first_name.toLowerCase().includes(arr[0])\r\n        && patient.last_name.toLowerCase().includes(arr[1])) || (patient.first_name.toLowerCase().includes(inputText)\r\n        || patient.last_name.toLowerCase().includes(inputText)) || (patient.first_name.toLowerCase().includes(arr[1])\r\n        && patient.last_name.toLowerCase().includes(arr[0])))\r\n}","import {useState} from \"react\";\r\n\r\nexport const useFetch = (callback) => {\r\n    const [error, setError] = useState('')\r\n\r\n    const getPatients = async () => {\r\n        try {\r\n            await callback()\r\n        } catch (e) {\r\n            setError(e.message)\r\n        }\r\n    }\r\n\r\n    return [getPatients, error]\r\n}","import React from \"react\";\r\nimport {FormControl, TextField, Grid, FormLabel, Paper, RadioGroup, FormControlLabel, Radio} from \"@mui/material\";\r\n\r\nconst PatientForm = ({patient, setPatient}) => {\r\n    const paperStyle = {padding: '30px 30px', width: 500, margin: \"20px auto\"}\r\n    const marginTop = {marginTop: 5}\r\n    const marginInput = {margin: 5}\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={20} style={paperStyle}>\r\n                <form>\r\n                    <TextField fullWidth label='First name' placeholder=\"Enter your first name\" variant=\"standard\"\r\n                               data-testid=\"first_name\"\r\n                               style={marginInput}\r\n                               value={patient.first_name}\r\n                               onChange={e => setPatient({...patient, first_name: e.target.value})}\r\n                    />\r\n                    <TextField fullWidth label='Last name' placeholder=\"Enter your last name\" variant=\"standard\"\r\n                               style={marginInput}\r\n                               value={patient.last_name}\r\n                               onChange={e => setPatient({...patient, last_name: e.target.value})}\r\n                    />\r\n                    <FormControl component=\"fieldset\" style={marginTop}>\r\n                        <FormLabel component=\"legend\">Gender</FormLabel>\r\n                        <RadioGroup aria-label=\"gender\" name=\"gender\" style={{display: 'initial'}}\r\n                                    value={patient.sex}\r\n                                    onChange={e => setPatient({...patient, sex: e.target.value})}\r\n                        >\r\n                            <FormControlLabel data-testid=\"Female-id\" value=\"Female\" control={<Radio/>} label=\"Female\"/>\r\n                            <FormControlLabel data-testid=\"Male-id\" value=\"Male\" control={<Radio/>} label=\"Male\"/>\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <TextField fullWidth id=\"date\" label=\"Birthday\" type=\"date\" variant=\"standard\" style={marginInput}\r\n                               InputLabelProps={{\r\n                                   shrink: true,\r\n                               }}\r\n                               value={patient.date_birth}\r\n                               onChange={e => setPatient({...patient, date_birth: e.target.value})}\r\n                    />\r\n                    <TextField fullWidth label='Country' placeholder=\"Enter your country\" variant=\"standard\"\r\n                               style={marginInput}\r\n                               value={patient.country}\r\n                               onChange={e => setPatient({...patient, country: e.target.value})}\r\n                    />\r\n                    <TextField fullWidth label='State' placeholder=\"Enter your state\" variant=\"standard\"\r\n                               style={marginInput}\r\n                               value={patient.state}\r\n                               onChange={e => setPatient({...patient, state: e.target.value})}\r\n                    />\r\n                    <TextField fullWidth label='Address' placeholder=\"Enter your Address\" variant=\"standard\"\r\n                               style={marginInput}\r\n                               value={patient.address}\r\n                               onChange={e => setPatient({...patient, address: e.target.value})}\r\n                    />\r\n                </form>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default PatientForm;","import React from 'react';\r\nimport Moment from \"react-moment\";\r\nimport {Typography} from \"@mui/material\";\r\n\r\nconst AgeAndName = ({patientInfo}) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{flexGrow: 1}}>\r\n                {patientInfo.first_name} {patientInfo.last_name}\r\n            </Typography>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{flexGrow: 1}}>\r\n                {patientInfo.date_birth\r\n                    ?<Moment fromNow ago>{patientInfo.date_birth}</Moment>\r\n                    :<div>{patientInfo.date_birth}</div>\r\n                }\r\n            </Typography>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AgeAndName;","import React from 'react';\r\nimport {AppBar, Box, Toolbar, Typography, createTheme,} from \"@mui/material\";\r\nimport AgeAndName from \"./AgeAndName\";\r\n\r\n\r\nconst RightHeader = ({children, patientInfo}) => {\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            background: 'white',\r\n        },\r\n    });\r\n    return (\r\n        <Box sx={{flexGrow: 1}} data-testid=\"patient-header\">\r\n            <AppBar position=\"static\"\r\n                    theme={darkTheme}\r\n            >\r\n                <Toolbar>\r\n                    {patientInfo\r\n                        ? <AgeAndName patientInfo={patientInfo}/>\r\n                        : <Typography variant=\"h6\" component=\"div\" sx={{flexGrow: 1}}>\r\n                        </Typography>\r\n                    }\r\n                    {children}\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default RightHeader;","import axios from \"axios\";\r\n\r\nexport default class PatientPost {\r\n    static async delete(id) {\r\n        await axios.delete(`/api-patients/patient-delete/${id}/`)\r\n    }\r\n\r\n    static async update(patient) {\r\n        await axios.put(`/api-patients/patient-update/${patient.id}/`, patient)\r\n    }\r\n\r\n    static async create(patient) {\r\n        return await axios.post('/api-patients/patient-create/', patient)\r\n    }\r\n}","import React, {useContext} from 'react';\r\nimport {useState} from \"react\";\r\nimport PatientForm from \"../components/Form/PatientForm\";\r\nimport Header from \"../components/Headers/RightHeader\";\r\nimport {Patients} from \"../context\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Button} from \"@mui/material\";\r\nimport PatientPost from \"../API/PatientPost\";\r\n\r\nconst PatientCreateForm = () => {\r\n    const history = useHistory()\r\n    const {patients, setPatients} = useContext(Patients)\r\n    const [patient, setPatient] = useState({first_name: '', last_name: '', date_birth: '', sex: '', state: '', country: '', address: ''});\r\n    const addNewPatient = async () => {\r\n        const patientCreated = await PatientPost.create(patient)\r\n        setPatients([patient, ...patients])\r\n        history.push(`/patient/${patientCreated.data.id}`)\r\n    }\r\n\r\n    //console.log(patient)\r\n    return (\r\n        <div>\r\n            <Header>\r\n                <Button\r\n                    disabled={!patient.first_name || !patient.last_name || !patient.date_birth || !patient.sex || !patient.state || !patient.country || !patient.address }\r\n                    onClick={addNewPatient}\r\n                    variant=\"contained\"\r\n                    sx={{ml: 3}}\r\n                    color=\"success\"\r\n                >\r\n                    Add patient\r\n                </Button>\r\n                <Button\r\n                    onClick={() => history.push(`/`)}\r\n                    variant=\"contained\"\r\n                    sx={{ml: 3}}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </Header>\r\n            <PatientForm patient={patient} setPatient={setPatient} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientCreateForm;","import React, {useContext, useState} from 'react';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText} from \"@mui/material\";\r\nimport PatientPost from \"../../API/PatientPost\";\r\nimport PatientGet from \"../../API/PatientGet\";\r\nimport {Patients} from \"../../context\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst ConfirmDeleteModal = ({id}) => {\r\n    const [open, setOpen] = useState(false);\r\n    const {setPatients} = useContext(Patients)\r\n    const history = useHistory()\r\n\r\n    const deletePatient = async () => {\r\n        await PatientPost.delete(id)\r\n        const patients = await PatientGet.getAll()\r\n        setPatients([...patients.data])\r\n        history.push(`/patient/${patients.data[0].id}`)\r\n        setOpen(false);\r\n    }\r\n\r\n    const openModal = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <div>\r\n            <Button color=\"error\" variant=\"contained\" onClick={openModal} sx={{ml: 2}}>\r\n                Delete\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={closeModal}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"You really want to remove the patient?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        If you delete a patient, his data will be lost and you will not be able to recover it.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeModal}>Disagree</Button>\r\n                    <Button data-testid=\"Agree\" color=\"error\" onClick={deletePatient} autoFocus>\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConfirmDeleteModal;","import Header from \"../components/Headers/RightHeader\";\r\nimport PatientForm from \"../components/Form/PatientForm\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {Patients} from \"../context\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport PatientGet from \"../API/PatientGet\";\r\nimport PatientPost from \"../API/PatientPost\";\r\nimport {Button} from \"@mui/material\";\r\nimport ConfirmDeleteModal from \"../components/RightPanel/ConfirmDeleteModal\";\r\n\r\nconst PatientEditForm = () => {\r\n    const {patients, setPatients} = useContext(Patients)\r\n    const history = useHistory()\r\n    const params = useParams()\r\n    const [patient, setPatient] = useState({first_name: '', last_name: '', date_birth: '', sex: '', state: '', country: '', address: ''})\r\n\r\n    useEffect(async () => {\r\n        const patient = await PatientGet.detail(params.id)\r\n        setPatient(patient.data)\r\n    }, [])\r\n    const savePatient = async () => {\r\n        await PatientPost.update(patient)\r\n        const patients = await PatientGet.getAll()\r\n        setPatients([...patients.data])\r\n        history.push(`/patient/${patient.id}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header>\r\n                <Button onClick={savePatient} variant=\"contained\" sx={{ml: 2}} color=\"success\">\r\n                    Save\r\n                </Button>\r\n                <Button disabled={!patients} onClick={() => history.push(`/patient/${params.id}`)} variant=\"contained\" sx={{ml: 2}}>\r\n                    Cancel\r\n                </Button>\r\n                <ConfirmDeleteModal id={params.id}/>\r\n            </Header>\r\n            <PatientForm patient={patient} setPatient={setPatient}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientEditForm;","import axios from \"axios\";\r\n\r\nexport default class CommentPost {\r\n    static async create(comment) {\r\n        return await axios.post('/api-patients/comment-create/', comment)\r\n    }\r\n}","import {Button, FormLabel, Paper, TextField} from \"@mui/material\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport React, {useState} from \"react\";\r\nimport CommentPost from \"../../../API/CommentPost\";\r\n\r\nconst SendComment = ({create, id}) => {\r\n    const [comment, setComment] = useState({\"comment\": \"\", \"comment_id\": id})\r\n    const addComment = async (e) => {\r\n        e.preventDefault()\r\n        const postComment = await CommentPost.create(comment)\r\n        create(postComment.data)\r\n        setComment({...comment, \"comment\": \"\"})\r\n    }\r\n\r\n    return (\r\n        <FormLabel>\r\n            <Paper elevation={20} sx={{p: \"20px 20px\", m: \"0 25px 0 25px\"}}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Send Comment\"\r\n                    value={comment.comment}\r\n                    onChange={e => setComment({...comment, \"comment\": e.target.value})}\r\n                    InputProps={{\r\n                        endAdornment:\r\n                            <Button disabled={!comment.comment} onClick={addComment} variant=\"outlined\"\r\n                                    endIcon={<SendIcon/>}>\r\n                                Send\r\n                            </Button>\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </FormLabel>\r\n    );\r\n};\r\n\r\nexport default SendComment;","import React from 'react';\r\nimport {Grid, Paper, Divider} from \"@mui/material\";\r\nimport {List} from \"@mui/icons-material\";\r\n\r\nconst CommentsPanel = ({comments}) => {\r\n    if (!comments?.length) {\r\n        return (\r\n            <div className=\"comment-panel\">\r\n                <h1 style={{textAlign: 'center'}}>\r\n                    There are no comments yet\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <Paper style={{padding: \"20px 20px\"}}>\r\n            {comments.map((comment) =>\r\n                <div key={comment.id}>\r\n                    <Grid container wrap=\"nowrap\" spacing={2}>\r\n                        <Grid justifyContent=\"left\" item xs zeroMinWidth>\r\n                            <h4 style={{margin: 0, textAlign: \"left\"}}>Doctor</h4>\r\n                            <p>\r\n                                {comment.comment}\r\n                            </p>\r\n                            <p style={{textAlign: \"left\", color: \"gray\"}}>\r\n                                {comment.date_create}\r\n                            </p>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Divider variant=\"fullWidth\" style={{margin: \"30px 0\"}}/>\r\n                </div>\r\n            )}\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default CommentsPanel;","import React from 'react';\r\nimport {Paper, Typography} from \"@mui/material\";\r\n\r\nconst PatientCard = ({patientInfo, paperStyle}) => {\r\n    if (!patientInfo) {\r\n        return (\r\n            <Paper elevation={20} style={paperStyle}>\r\n                <div>Waiting...</div>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Paper elevation={20} style={paperStyle} data-testid=\"patientcard\">\r\n            <Typography component=\"div\" variant=\"h5\">\r\n                First Name: {patientInfo.first_name}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"h5\">\r\n                Last Name: {patientInfo.last_name}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"h5\">\r\n                Country: {patientInfo.country}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"h5\">\r\n                State: {patientInfo.state}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"h5\">\r\n                Address: {patientInfo.address}\r\n            </Typography>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default PatientCard;","import React from 'react';\r\nimport CommentsPanel from \"./Comments/CommentsPanel\";\r\nimport {\r\n    Box,\r\n    Grid,\r\n    Paper,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport PatientCard from \"./PatientCard\";\r\n\r\nconst MainBlock = ({patientInfo, comments, children}) => {\r\n\r\n    const paperStyle = {padding: '30px 30px', margin: \"25px\", borderRadius: 5}\r\n    return (\r\n        <Box sx={{flexGrow: 1}}>\r\n            <Grid container sx={{justifyContent: \"end\", height: \"100%\"}}>\r\n                <Grid item xs={6} md={4}>\r\n                    <PatientCard paperStyle={paperStyle} patientInfo={patientInfo}/>\r\n                </Grid>\r\n                <Grid item xs={6} md={8}/*md={4}*/>\r\n                    <Paper elevation={10} style={paperStyle}\r\n                           sx={{\r\n                               height: 450,\r\n                               overflowY: \"scroll\",\r\n                               wordWrap: \"break-word\",\r\n                               maxWidth: 1000,\r\n                               position: \"relative\",\r\n                               bottom: 0\r\n                           }}>\r\n                        <Typography component=\"div\">\r\n                            <CommentsPanel comments={comments}/>\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={6} md={8}>\r\n                    {children}\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MainBlock;","import axios from \"axios\";\r\n\r\nexport default class CommentGet {\r\n    static async getAll(id) {\r\n        return await axios.get(`/api-patients/comments-detail/${id}/`)\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport Header from \"../components/Headers/RightHeader\";\r\nimport SendComment from \"../components/RightPanel/Comments/SendComment\";\r\nimport MainBlock from \"../components/RightPanel/MainBlock\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport PatientGet from \"../API/PatientGet\";\r\nimport CommentGet from \"../API/CommentGet\";\r\nimport {Button} from \"@mui/material\";\r\nimport ConfirmDeleteModal from \"../components/RightPanel/ConfirmDeleteModal\";\r\n\r\nconst PatientInfo = () => {\r\n    const id = useParams().id\r\n    const history = useHistory()\r\n    const [patient, setPatient] = useState('')\r\n    const [comments, setComments] = useState([])\r\n    //console.log(id, 'ID')\r\n    //console.log(comments, 'COMMENTS')\r\n    useEffect(async () => {\r\n        const patient = await PatientGet.detail(id)\r\n        const comments = await CommentGet.getAll(id)\r\n        setPatient(patient.data)\r\n        setComments(comments.data)\r\n    }, [id])\r\n    //console.log(patient, 'PATIENT')\r\n\r\n    const createComment = (comment) => {\r\n        setComments([comment, ...comments])\r\n    }\r\n    return (\r\n        <div>\r\n            <Header patientInfo={patient}>\r\n                <Button disabled={!patient.id} onClick={() => history.push(`/patient/${patient.id}/edit`)} variant=\"contained\">\r\n                    Edit\r\n                </Button>\r\n                <ConfirmDeleteModal id={id}/>\r\n            </Header>\r\n            <MainBlock create={createComment} patientInfo={patient} comments={comments}>\r\n                <SendComment create={createComment}/>\r\n            </MainBlock>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientInfo;","import './styles/App.css'\r\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Layout from \"./components/Layout/Layout\";\r\nimport PatientCreateForm from \"./pages/PatientCreateForm\";\r\nimport PatientEditForm from \"./pages/PatientEditForm\";\r\nimport PatientInfo from \"./pages/PatientInfo\";\r\n\r\nfunction App({id}) {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"App\">\r\n                <Layout>\r\n                    <Switch>\r\n                        <Route exact path=\"/patient/create\">\r\n                            <PatientCreateForm/>\r\n                        </Route>\r\n                        <Route exact path=\"/patient/:id\">\r\n                            <PatientInfo/>\r\n                        </Route>\r\n                        <Route exact path=\"/patient/:id/edit\">\r\n                            <PatientEditForm/>\r\n                        </Route>\r\n                        <Route exact path=\"/\">\r\n                            <Redirect to={id || '/'}/>\r\n                        </Route>\r\n                    </Switch>\r\n                </Layout>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport {Patients} from \"./index\";\r\n\r\nconst PatientsContext = ({children}) => {\r\n    const [patients, setPatients] = useState([])\r\n    return (\r\n        <Patients.Provider value={{\r\n            patients, setPatients\r\n        }}>\r\n            {children}\r\n        </Patients.Provider>\r\n    );\r\n};\r\n\r\nexport default PatientsContext;","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport PatientGet from \"./API/PatientGet\";\nimport PatientsContext from \"./context/PatientsContext\";\n\nfunction Main() {\n    const [id, setId] = useState('')\n    const getId = async () => {\n        const response = await PatientGet.getAll()\n        setId(`/patient/${response.data[0].id}`)\n    }\n    if (!id) {\n        getId()\n    }\n    return (\n        <PatientsContext>\n            <App id={id}/>\n        </PatientsContext>\n    )\n}\n\nReactDOM.render(\n    <Main />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}