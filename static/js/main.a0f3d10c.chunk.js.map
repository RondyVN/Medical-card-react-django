{"version":3,"sources":["components/UI/MyModal/MyModal.module.css","components/UI/button/MyButton.module.css","components/UI/myinput/Input.module.css","components/LeftPanel/PatientItem.jsx","components/LeftPanel/PatientList.jsx","components/UI/button/MyButton.jsx","components/UI/myinput/Input.jsx","components/LeftPanel/Search.jsx","components/UI/MyModal/MyModal.jsx","components/Form.jsx","API/PostService.js","components/utils/CreatePatient.js","components/LeftPanel/CreateForm.jsx","components/Panel.jsx","components/LeftPanel/LeftPanle.jsx","components/RightPanel/RightPanel.jsx","components/RightPanel/Header.jsx","components/RightPanel/PatientFormEdit.jsx","components/utils/AddComment.js","components/RightPanel/comments/SendComment.jsx","components/RightPanel/OutPatient.jsx","components/RightPanel/CommentItem.jsx","components/RightPanel/comments/CommentsPanel.jsx","components/RightPanel/MainBlock.jsx","components/RightPanel/PatientInfo.jsx","App.js","hooks/useSearch.js","hooks/useFetch.js","index.js"],"names":["module","exports","PatientItem","props","className","onClick","setId","patients","id","first_name","last_name","date_birth","PatientList","length","map","e","style","textAlign","MyButton","children","classes","MyBtn","Input","React","forwardRef","ref","cl","MyInput","Search","filter","setFilter","value","query","onChange","target","placeholder","MyModal","visible","setVisible","rootClasses","myModal","push","active","join","myModalContent","stopPropagation","Form","post","setPost","type","sex","disabled","country","state","address","PostService","axios","get","response_patient","responseFirstId","idPatient","delete","responsePatientDetail","response–°omments","put","postPat","CreatePatient","create","a","i","ValuePost","Object","values","KeyPost","keys","count","key","utc","Date","toJSON","slice","data","CreateForm","useState","enableCreate","setEnableCreate","addNewPost","preventDefault","Panel","LeftPanle","RightPanel","Header","PatientFormEdit","setEdit","updRightPanel","deletePatient","savePatient","UpdatePatient","getPatient","postList","handler","AddComment","comment","setComment","SendComment","addComment","OutPatient","info","CommentItem","com","username","date_create","CommentsPanel","comments","MainBlock","PatientInfo","edit","setComments","setInfo","getInfoPatient","useCallback","DetailPatient","response","CommentPatient","response_comments","comment_id","createComment","useEffect","App","setPatients","modal","setModal","getSearch","sortedPosts","useMemo","toLowerCase","includes","usePosts","setIdPatient","enableDel","setEnableDel","callback","isLoading","setIsLoading","error","setError","fetching","message","useFetch","getFirstPatient","fetchPosts","isPostsLoading","postError","createPatient","newPost","DeletePatient","patient","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0f3d10c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__2656H\",\"myModalContent\":\"MyModal_myModalContent__1V8Bc\",\"active\":\"MyModal_active__EofLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyBtn\":\"MyButton_MyBtn__GtlHn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyInput\":\"Input_MyInput__1F2Fy\"};","import React from 'react';\r\n\r\nconst PatientItem = (props) => {\r\n\r\n    const getId = () => {\r\n        props.setId(props.patients.id)\r\n    }\r\n    return (\r\n        <div className=\"patient\" onClick={getId}>\r\n            <div className=\"first-last-name\">\r\n                {props.patients.first_name} {props.patients.last_name}\r\n            </div>\r\n            <div className=\"date-patient\">\r\n                {props.patients.date_birth}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientItem;","import React from 'react';\r\nimport PatientItem from \"./PatientItem\";\r\n\r\n\r\nconst PatientList = ({setId, patients}) => {\r\n    if (!patients.length) {\r\n        return (\r\n            <div>\r\n                <h1 style={{textAlign: 'center'}}>\r\n                    Posts not found!\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {patients.map(e =>\r\n                <PatientItem setId={setId} key={e.id} patients={e}/>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientList;","import React from 'react';\r\nimport classes from './MyButton.module.css';\r\n\r\nconst MyButton = ({children, ...props}) => {\r\n    return (\r\n        <button {...props} className={classes.MyBtn}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MyButton;","import React from 'react';\r\nimport cl from './Input.module.css'\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n    return (\r\n        <input ref={ref} className={cl.MyInput} {...props}/>\r\n    );\r\n});\r\n\r\nexport default Input;","import React from 'react';\r\nimport Input from \"../UI/myinput/Input\";\r\n\r\nconst Search = ({filter, setFilter}) => {\r\n    return (\r\n        <Input\r\n            value={filter.query}\r\n            onChange={e => setFilter({...filter, query: e.target.value})}\r\n            placeholder='Search'\r\n        />\r\n    );\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport cl from './MyModal.module.css'\r\n\r\nconst MyModal = ({children, visible, setVisible}) => {\r\n\r\n    const rootClasses = [cl.myModal]\r\n\r\n    if (visible) {\r\n        rootClasses.push(cl.active)\r\n    }\r\n\r\n    return (\r\n        <div className={rootClasses.join(' ')} onClick={() => setVisible(false)}>\r\n            <div className={cl.myModalContent} onClick={(e) => e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyModal;","import Input from \"./UI/myinput/Input\";\r\n\r\nconst Form = ({post, setPost, children}) => {\r\n\r\n\r\n    return (\r\n        <form>\r\n            <Input\r\n                value={post.first_name}\r\n                onChange={e => setPost({...post, first_name: e.target.value})}\r\n                type=\"text\"\r\n                placeholder=\"First Name\"\r\n            />\r\n            <Input\r\n                value={post.last_name}\r\n                onChange={e => setPost({...post, last_name: e.target.value})}\r\n                type=\"text\"\r\n                placeholder=\"Last Name\"/>\r\n            <Input\r\n                value={post.date_birth}\r\n                onChange={e => setPost({...post, date_birth: e.target.value})}\r\n                type=\"date\"\r\n                placeholder=\"Date birth\"/>\r\n            <select\r\n                value={post.sex}\r\n                onChange={e => setPost({...post, sex: e.target.value})}\r\n            >\r\n                <option disabled value=\"\">Choose sex</option>\r\n                <option value=\"Male\">Male</option>\r\n                <option value=\"Female\">Female</option>\r\n            </select>\r\n            <Input\r\n                value={post.country}\r\n                onChange={e => setPost({...post, country: e.target.value})}\r\n                type=\"text\"\r\n                placeholder=\"Country\"/>\r\n            <Input\r\n                value={post.state}\r\n                onChange={e => setPost({...post, state: e.target.value})}\r\n                type=\"text\"\r\n                placeholder=\"State\"/>\r\n            <Input\r\n                value={post.address}\r\n                onChange={e => setPost({...post, address: e.target.value})}\r\n                type=\"text\"\r\n                placeholder=\"Address\"/>\r\n            {children}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import axios from \"axios\";\r\n\r\nexport default class PostService {\r\n\r\n    static async getPatient() {\r\n        const response_patient = await axios.get('http://127.0.0.1:8000/api-patients/patient-list/')\r\n        return response_patient\r\n    }\r\n\r\n    static async getFirstPatient() {\r\n        const responseFirstId = await axios.get('http://127.0.0.1:8000/api-patients/patient-first/')\r\n        return responseFirstId\r\n    }\r\n\r\n    static async DeletePatient(idPatient) {\r\n        await axios.delete(`http://127.0.0.1:8000/api-patients/patient-delete/${idPatient}/`)\r\n    }\r\n\r\n    static async DetailPatient(idPatient) {\r\n        const responsePatientDetail = await axios.get(`http://127.0.0.1:8000/api-patients/patient-detail/${idPatient}/`)\r\n        return responsePatientDetail\r\n    }\r\n\r\n    static async CommentPatient(idPatient) {\r\n        const response–°omments = await axios.get(`http://127.0.0.1:8000/api-patients/comments-detail/${idPatient}/`)\r\n        return response–°omments\r\n    }\r\n\r\n    static async UpdatePatient(post) {\r\n        await axios.put(`http://127.0.0.1:8000/api-patients/patient-update/${post.id}/`, post)\r\n    }\r\n\r\n    static async CreatePatient(post) {\r\n        const postPat = await axios.post('http://127.0.0.1:8000/api-patients/patient-create/', post)\r\n        return postPat\r\n    }\r\n}","import PostService from \"../../API/PostService\";\r\n\r\n\r\nexport const CreatePatient = async (post, setPost, create) => {\r\n\r\n    const ValuePost = Object.values(post)\r\n    const KeyPost = Object.keys(post)\r\n    let count = 0\r\n    let key = 0\r\n    for (let i in ValuePost) {\r\n        if (ValuePost[i] === '') {\r\n            count += 1\r\n            key = KeyPost[+i]\r\n            setPost({...post, key: ''})\r\n        }\r\n    }\r\n\r\n    let utc = new Date().toJSON().slice(0, 10);\r\n    if (post.date_birth > utc) {\r\n        setPost({...post, date_birth: ''})\r\n    }\r\n\r\n    if (count === 0) {\r\n        const postPat = await PostService.CreatePatient(post)\r\n        create(postPat.data)\r\n        setPost({first_name: '', last_name: '', date_birth: '', sex: '', state: '', country: '', address: ''})\r\n    }\r\n}","import React from 'react';\r\nimport {useState} from \"react\";\r\nimport MyButton from \"../UI/button/MyButton\";\r\nimport Form from \"../Form\";\r\nimport {CreatePatient} from \"../utils/CreatePatient\";\r\n\r\nconst CreateForm = ({create}) => {\r\n    const [post, setPost] = useState({first_name: '', last_name: '', date_birth: '', sex: '', state: '', country: '', address: ''});\r\n    const [enableCreate, setEnableCreate] = useState(false)\r\n\r\n    const addNewPost = async (e) => {\r\n        e.preventDefault()\r\n        CreatePatient(post, setPost, create)\r\n        //setPost({first_name: '', last_name: '', date_birth: '', sex: '', state: '', country: '', address: ''})\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Form post={post} setPost={setPost} setEnableCreate={setEnableCreate}>\r\n                <div className=\"position-btn-to-createForm\">\r\n                    <MyButton disabled={enableCreate} onClick={addNewPost}>Add patient</MyButton>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateForm;","import React from 'react';\r\n\r\nconst Panel = ({children}) => {\r\n    return (\r\n        <div className=\"panels\">\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Panel;","import React from 'react';\r\n\r\nconst LeftPanle = ({children}) => {\r\n    return (\r\n        <div className=\"left-panel\">\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LeftPanle;","import React from 'react';\r\n\r\nconst RightPanel = ({children}) => {\r\n    return (\r\n        <div className=\"right-panel\">\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RightPanel;","import React from 'react';\r\n\r\n\r\nconst Header = ({children}) => {\r\n    return (\r\n        <header className=\"header-right-panel\">\r\n            <div className=\"placing-btn\">\r\n                {children}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import MyButton from \"../UI/button/MyButton\";\r\nimport Header from \"./Header\";\r\nimport Form from \"../Form\";\r\nimport PostService from \"../../API/PostService\";\r\n\r\nconst PatientFormEdit = ({post, setPost, setEdit, updRightPanel, deletePatient}) => {\r\n\r\n    const savePatient = async (e) => {\r\n        e.preventDefault()\r\n        await PostService.UpdatePatient(post)\r\n        const postList = await PostService.getPatient()\r\n        updRightPanel(postList.data)\r\n        setEdit(false)\r\n        setPost({first_name: '', last_name: '', date_birth: '', sex: '', state: '', country: ''})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header>\r\n                <span><MyButton onClick={savePatient}>Save</MyButton></span>\r\n                <span><MyButton onClick={() => setEdit(false)}>Cancel</MyButton></span>\r\n                <span><MyButton onClick={deletePatient}>Delete</MyButton></span>\r\n            </Header>\r\n            <Form post={post} setPost={setPost} handler={savePatient}></Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientFormEdit;","import axios from \"axios\";\r\n\r\nexport const AddComment = async (comment, setComment, create) => {\r\n    const postPat = await axios.post('http://127.0.0.1:8000/api-patients/comment-create/', comment)\r\n\r\n    create(postPat.data)\r\n    setComment({...comment, \"comment\": \"\"})\r\n}","import Input from \"../../UI/myinput/Input\";\r\nimport MyButton from \"../../UI/button/MyButton\";\r\nimport {AddComment} from \"../../utils/AddComment\";\r\n\r\nconst SendComment = ({create, comment, setComment}) => {\r\n\r\n    const addComment = async (e) => {\r\n        e.preventDefault()\r\n        AddComment(comment, setComment, create)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"send-comment\">\r\n            <div className=\"input-sendMessage\">\r\n                <Input type=\"textarea\" value={comment.comment}\r\n                       onChange={e => setComment({...comment, \"comment\": e.target.value})}/>\r\n            </div>\r\n            {comment.comment\r\n                ? <MyButton disabled={false} onClick={addComment}>Send comment</MyButton>\r\n                : <MyButton disabled={true} onClick={addComment}>Send comment</MyButton>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SendComment;","import React from 'react';\r\n\r\nconst OutPatient = ({info}) => {\r\n    return (\r\n        <div className=\"out-patient\">\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>First Name:</td>\r\n                        <td>{info.first_name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Last Name:</td>\r\n                        <td>{info.last_name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Country:</td>\r\n                        <td>{info.country}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>State:</td>\r\n                        <td>{info.state}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Address</td>\r\n                        <td>{info.address}</td>\r\n                    </tr>\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OutPatient;","import React from 'react';\r\n\r\nconst CommentItem = (props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"first-last-name\">\r\n                {props.com.username} {props.com.comment}\r\n            </div>\r\n            <div className=\"date-patient\">\r\n                {props.com.date_create}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentItem;","import React from 'react';\r\nimport CommentItem from \"../CommentItem\";\r\n\r\nconst CommentsPanel = ({comments}) => {\r\n    return (\r\n        <div className=\"comment-panel\">\r\n            {comments.map(e =>\r\n                <div className=\"comment\" key={e.id}><CommentItem com={e}/></div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentsPanel;","import React from 'react';\r\nimport OutPatient from \"./OutPatient\";\r\nimport CommentsPanel from \"./comments/CommentsPanel\";\r\n\r\nconst MainBlock = ({info, comments}) => {\r\n    return (\r\n        <div className=\"main-block\">\r\n            <OutPatient info={info}/>\r\n            <CommentsPanel comments={comments}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainBlock;","import React, {useEffect, useState, useCallback} from 'react';\r\nimport Header from \"./Header\";\r\nimport MyButton from \"../UI/button/MyButton\";\r\nimport PatientFormEdit from \"./PatientFormEdit\";\r\nimport SendComment from \"./comments/SendComment\";\r\nimport MainBlock from \"./MainBlock\";\r\nimport PostService from \"../../API/PostService\";\r\n\r\nconst PatientInfo = ({id, edit, setEdit, deletePatient, updRightPanel}) => {\r\n\r\n    const [comments, setComments] = useState([])\r\n    const [comment, setComment] = useState({\"comment\": \"\", \"comment_id\": \"\"})\r\n\r\n    const [info, setInfo] = useState('')\r\n    const getInfoPatient = useCallback(async () => {\r\n        const response = await PostService.DetailPatient(id)\r\n        const response_comments = await PostService.CommentPatient(id)\r\n        setInfo(response.data)\r\n        setComments(response_comments.data)\r\n        setComment({comment: '', comment_id: id})\r\n    }, [id])\r\n\r\n\r\n    const createComment = async (comment) => {\r\n        setComments([comment, ...comments])\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfoPatient()\r\n    }, [edit, getInfoPatient])\r\n\r\n    if (edit) {\r\n        return (\r\n            <div>\r\n                <PatientFormEdit post={info} setPost={setInfo} setEdit={setEdit} updRightPanel={updRightPanel}\r\n                                 deletePatient={deletePatient}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header>\r\n                <span><MyButton onClick={() => setEdit(true)}>Edit</MyButton></span>\r\n                <span><MyButton onClick={deletePatient}>Delete</MyButton></span>\r\n            </Header>\r\n            <MainBlock info={info} comments={comments} create={createComment} comment={comment} setComment={setComment}/>\r\n            <SendComment create={createComment} comment={comment} setComment={setComment}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientInfo;","import './styles/App.css'\nimport {useEffect, useState} from \"react\";\nimport PatientList from \"./components/LeftPanel/PatientList\";\nimport MyButton from \"./components/UI/button/MyButton\";\nimport {usePosts} from \"./hooks/useSearch\"\nimport {useFetch} from \"./hooks/useFetch\"\nimport Search from \"./components/LeftPanel/Search\";\nimport MyModal from \"./components/UI/MyModal/MyModal\";\nimport CreateForm from \"./components/LeftPanel/CreateForm\";\nimport Panel from \"./components/Panel\";\nimport LeftPanle from \"./components/LeftPanel/LeftPanle\";\nimport RightPanel from \"./components/RightPanel/RightPanel\";\nimport PatientInfo from \"./components/RightPanel/PatientInfo\";\nimport PostService from \"./API/PostService\";\n\nfunction App() {\n    const [edit, setEdit] = useState(false)\n    const [patients, setPatients] = useState([])\n    const [filter, setFilter] = useState({query: ''})\n    const [modal, setModal] = useState(false)\n    const getSearch = usePosts(patients, filter.query)\n    const [idPatient, setIdPatient] = useState('')\n    const [enableDel, setEnableDel] = useState(false)\n    const [fetchPosts, isPostsLoading, postError] = useFetch(async () => {\n        const response = await PostService.getPatient()\n        setPatients(response.data)\n        const responseFirstId = await PostService.getFirstPatient()\n        setIdPatient(responseFirstId.data.id)\n        setEnableDel(false)\n    })\n\n    useEffect(() => {\n        fetchPosts()\n    }, [enableDel])\n\n    const createPatient = async (newPost) => {\n        setPatients([newPost, ...patients])\n        setIdPatient(newPost.id)\n        setModal(false)\n    }\n\n    const updPatient = (patient) => {\n        setPatients([...patient])\n    }\n\n    const setId = (id) => {\n        setIdPatient(id)\n    }\n\n    const deletePatient = async () => {\n        await PostService.DeletePatient(idPatient)\n        setEnableDel(true)\n    }\n\n    return (\n        <div className=\"App\">\n            {postError}\n            <Panel>\n                <LeftPanle>\n                    <Search filter={filter} setFilter={setFilter}/>\n                    <div className=\"position-btn\">\n                        <MyButton onClick={() => setModal(true)}>\n                            Create user\n                        </MyButton>\n                    </div>\n                    <MyModal visible={modal} setVisible={setModal}>\n                        <CreateForm create={createPatient}/>\n                    </MyModal>\n                    {isPostsLoading\n                        ? <div>Loading...</div>\n                        : <PatientList setId={setId} patients={getSearch}/>\n                    }\n                </LeftPanle>\n\n                <RightPanel>\n                    {!idPatient\n                        ? <div>Loading...</div>\n                        : <PatientInfo edit={edit} id={idPatient} setEdit={setEdit} deletePatient={deletePatient} updRightPanel={updPatient}/>\n                    }\n                </RightPanel>\n            </Panel>\n        </div>\n    );\n}\n\nexport default App;\n\n\n","import {useMemo} from \"react\";\r\n\r\nexport const usePosts = (patients, query) => {\r\n    const sortedPosts = patients\r\n\r\n    const sortedAndSearchedPost = useMemo(() => {\r\n        return sortedPosts.filter(post => post.first_name.toLowerCase().includes(query.toLowerCase()) || post.last_name.toLowerCase().includes(query.toLowerCase()))\r\n    }, [query, sortedPosts])\r\n\r\n    return sortedAndSearchedPost\r\n\r\n}","import {useState} from \"react\";\r\n\r\nexport const useFetch = (callback) => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n\r\n    const fetching = async () => {\r\n        try {\r\n            setIsLoading(true)\r\n            await callback()\r\n        } catch (e) {\r\n            setError(e.message)\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return [fetching, isLoading, error]\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}